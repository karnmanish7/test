@model TaskRobo.Models.UserTask
@{
    ViewBag.Title = "Create";
}

<h2>Create Task</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "create Failed, fields.");
    <div>
        <fieldset>
            
            <div class="editor-label">@Html.LabelFor(u => u.TaskTitle)</div>
            <div class="editor-field">
                @Html.TextBoxFor(u => u.TaskTitle)
                @Html.ValidationMessageFor(u => u.TaskTitle)
            </div>

            <div class="editor-label">@Html.LabelFor(u => u.TaskContent)</div>
            <div class="editor-field">
                @Html.TextBoxFor(u => u.TaskContent)
                @Html.ValidationMessageFor(u => u.TaskContent)
            </div>

            <div class="editor-label">@Html.LabelFor(u => u.TaskStatus)</div>
            <div class="editor-field">
                @Html.TextBoxFor(u => u.TaskStatus)
                @Html.ValidationMessageFor(u => u.TaskStatus)
            </div>

            @*<div>
                @Html.DropDownList("JobTitle", "Select a Value")
                @Html.DropDownListFor(m => m.catogories, new SelectList(ViewBag.JobTitle),"Select Gender")
               
            </div>*@
            @*<div class="editor-label">@Html.LabelFor(u => u.TaskStatus)</div>
            <div class="editor-field">
                @Html.DropDownListFor(u => u.CategoryID, "1")
                @Html.ValidationMessageFor(u => u.TaskStatus)
            </div>*@

            @*@Html.LabelFor(model => model.CategoryID, "Category", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, new SelectList(Model.catogories, "CategoryId", "CategoryTitle"), "- Please Select -")
                @Html.ValidationMessageFor(model => model.CategoryID)
            </div>*@

            <input type="submit" value="Create" />
        </fieldset>
    </div>
}